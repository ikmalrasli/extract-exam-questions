{"text": f"""
            ANSWER SPACE IDENTIFICATION RULES:
            1. Visual Cues:
               - Single-line: One thin line or small box for short answers
               - Multi-line: Multiple lines or large box for paragraphs
               - Blank-space: Large empty area with no lines
               - Multiple-choice: Boxes/circles for ticking/filling

            2. Marks-based Hints:
               - 1 mark questions typically use single-line answers
               - 2-3 marks may use single or multi-line based on context
               - 4+ marks usually require multi-line answers
               
            3. Question Context:
               - Calculation questions usually need single-line for final answer
               - "Name/State/List" typically needs single-line
               - "Explain/Describe/Discuss" typically needs multi-line
               - "Fill in the blanks" always uses single-line
               
            Example formats:
            1. Single-line answer:
            {{
                "type": "answer_space",
                "format": "single-line"
            }}
            
            2. Multi-line answer:
            {{
                "type": "answer_space",
                "format": "multi-line",
                "lines": 4  // if number of lines is visible
            }}
        """},

{"text": """
            ADDITIONAL JSON FORMATTING RULES:
            1. String Escaping and Line Length:
               - Use proper escape sequences for newlines: "\\n" (not "n")
               - Keep lines under 2000 characters
               - Split long text using proper "\\n"
               - Use array of strings for very long text
               Example:
               WRONG: 
                 "text": "First line nSecond line"
               CORRECT:
                 "text": "First line\\nSecond line"
               
               For very long text:
               "text": [
                 "First part of long text...",
                 "Second part of long text..."
               ]
        """},
        {"text": """
            JSON VALIDATION RULES:
            1. Property Names:
               - ALL property names must be in double quotes
               - Common properties: "type", "text", "malay", "english", "number", "marks", "content_flow"
               
            2. Response Size:
               - Keep responses concise
               - Split long text into smaller chunks
               - Use line breaks only when necessary
               
            3. Structure Completion:
               - Every opening brace/bracket must have a closing pair
               - Every property must have a value
               - Arrays must end with proper closing brackets
               
            4. Common Issues to Avoid:
               - Unquoted property names
               - Truncated responses
               - Incomplete JSON structures
               - Missing closing braces/brackets
        """},
        {"text": """
            QUESTION NESTING RULES:
            1. Critical Structure Rules:
               - sub_questions MUST be nested inside their parent question
               - NEVER place sub_questions as a separate object
               - WRONG:
                 [
                   { "number": "2(b)", "content_flow": [...] },
                   { "sub_questions": [...] }
                 ]
               - CORRECT:
                 [
                   {
                     "number": "2(b)",
                     "content_flow": [...],
                     "sub_questions": [...]
                   }
                 ]
               
            2. Nesting Validation:
               - Every question with sub-questions must contain them inside its own object
               - Check that sub_questions array is a property of its parent question
               - Verify nesting depth matches question numbering
        """},
        {"text": """
            ARRAY HANDLING RULES:
            1. Sub-questions Array:
               - Each question can have ONLY ONE sub_questions array
               - WRONG:
                 {
                   "number": "3(c)",
                   "sub_questions": [...],
                   "sub_questions": [...]  // DUPLICATE!
                 }
               - CORRECT:
                 {
                   "number": "3(c)",
                   "sub_questions": [
                     {"number": "3(c)(i)", ...},
                     {"number": "3(c)(ii)", ...}
                   ]
                 }

            2. Array Delimiters:
               - Use comma between array elements
               - No comma after last element
               - WRONG: ["a", "b",]
               - CORRECT: ["a", "b"]
               
            3. Array Nesting:
               - Keep all related sub-questions in ONE array
               - Don't create separate arrays for each sub-question
               - Group all sub-questions of same parent together
        """},
        {"text": """
            ARRAY AND OBJECT STRUCTURE RULES:
            1. Content Flow Array:
               - Must only contain content items
               - WRONG:
                 "content_flow": [
                   {"type": "text", ...},
                   {"type": "answer_space", ...},
                   "sub_questions": []  // WRONG PLACEMENT!
                 ]
               - CORRECT:
                 {
                   "content_flow": [
                     {"type": "text", ...},
                     {"type": "answer_space", ...}
                   ],
                   "sub_questions": []  // CORRECT PLACEMENT
                 }
               
            2. Array Separators:
               - Every array element must be followed by a comma EXCEPT the last one
               - Every object property must be followed by a comma EXCEPT the last one
               - Example:
                 WRONG:
                   "content_flow": [
                     {"type": "text"} // Missing comma!
                     {"type": "answer_space"}
                   ]
                 CORRECT:
                   "content_flow": [
                     {"type": "text"},
                     {"type": "answer_space"}
                   ]
        """},


{"text": """
            ARRAY NESTING AND COMMA RULES:
            1. Main Questions Structure:
               - main_questions array contains question objects
               - Each question object must have its questions array
               WRONG:
                 "main_questions": [{"number": "11"}],
                 "questions": [...]  // Separate array
               CORRECT:
                 "main_questions": [{
                   "number": "11",
                   "questions": [...]  // Nested inside main question
                 }]
               
            2. Empty Arrays:
               - Don't include empty arrays unless required
               - If including, place them at correct level
               WRONG:
                 "content_flow": [
                   {"type": "text"},
                   "sub_questions": []  // Wrong placement
                 ]
               CORRECT:
                 {
                   "content_flow": [
                     {"type": "text"}
                   ],
                   "sub_questions": []  // Correct placement
                 }
               
            3. Array Element Separation:
               - ALWAYS use comma between array elements
               - NEVER use comma after last element
               Example:
               WRONG:
                 [
                   {"type": "text"}  // Missing comma
                   {"type": "answer_space"}
                 ]
               CORRECT:
                 [
                   {"type": "text"},
                   {"type": "answer_space"}
                 ]
        """},    
        
{"text": """
            OBJECT BOUNDARY RULES:
            1. Array and Object Closure:
               - Close all arrays and objects before starting new ones
               - WRONG:
                 {
                   "sub_questions": []}, {"number": "2(b)(ii)"  // New object started before proper closure
                 }
               - CORRECT:
                 {
                   "sub_questions": [],
                   "number": "2(b)(ii)"  // Properties within same object
                 }
               
            2. Property Placement:
               - All related properties must be inside the same object
               - Don't start new object for related properties
               Example:
               WRONG:
                 {
                   "number": "2(b)",
                   "content_flow": [...]
                 },
                 {
                   "sub_questions": [...]  // Should be inside previous object
                 }
               CORRECT:
                 {
                   "number": "2(b)",
                   "content_flow": [...],
                   "sub_questions": [...]  // Properly nested
                 }
        """},
        
        {"text": """
            VERIFICATION CHECKLIST:
            1. Did you extract ALL questions from the PDF? (1-8 for Section A)
            2. Is every piece of content different from the reference?
            3. Are all questions properly numbered and sequential?
            4. Have you included all required fields for each question?
            5. Are languages properly separated (no mixing)?
            6. Are newlines only used within same language text?
            
            ⚠️ FINAL CHECK:
            - Compare your output with reference
            - If ANY content matches reference exactly, REGENERATE with new content
            - Ensure ALL questions (1-8) are included for Section A
            - Verify language separation is correct
            - Check font style to help identify languages
        """}